---
# tasks for remove cluster

- name: Set server failure domain
  ansible.builtin.set_fact:
    host_group: "none"
  when: host_group is undefined

- name: Generate list of instances per server
  ansible.builtin.import_tasks:
    file: genin.yml

- block:

  - name: Remove systemd unit files
    ansible.builtin.systemd:
      name: '{{ cluster_name }}@{{ instance }}.service'
      enabled: false
      state: stopped
      scope: '{{ systemd_scope }}'
    loop: '{{ instances_on_host }}'
    loop_control:
      loop_var: instance
    ignore_errors: True
    environment:
      XDG_RUNTIME_DIR: '/run/user/{{uid.stdout}}'

  - name: Remove systemd env dirs
    ansible.builtin.file:
      name: '{{ systemd_dir }}/{{ cluster_name }}@{{ instance }}.service.d'
      state: absent
    loop: '{{ instances_on_host }}'
    loop_control:
      loop_var: instance

  - name: Remove systemd template file
    ansible.builtin.file:
      name: '{{ systemd_dir }}/{{ cluster_name }}@.service'
      state: absent

  become: true
  become_user: '{{ systemd_user }}'
  when: init_system == 'systemd'
# end block

- block:
  - name: Remove supervisord configs
    ansible.builtin.file:
      name: '{{ supervisord_dir }}/{{ cluster_name }}'
      state: absent
    when: rootless == false

  - name: Remove data from supervisord dir if set purge variable and rootless
    ansible.builtin.shell:
      cmd: 'rm -f {{ supervisord_dir }}/{{ cluster_name }}/*'
    when: rootless == true

  - name: Stop cluster in supervisord
    ansible.builtin.command:
      cmd: '/usr/bin/supervisorctl -c {{ supervisord_dir }}/{{ cluster_name }}.conf update'
    ignore_errors: True

  - name: Disable systemd service for supervisord
    ansible.builtin.systemd:
      name: 'supervisord-{{ cluster_name }}.service'
      enabled: false
      state: stopped
      scope: '{{ systemd_scope }}'
    ignore_errors: True
    environment:
      XDG_RUNTIME_DIR: /run/user/{{uid.stdout}}
    when: systemd_scope == 'user'

  - name: Remove supervisord configs
    ansible.builtin.file:
      name: '{{ supervisord_dir }}/{{ cluster_name }}.conf'
      state: absent
    when: systemd_scope == 'user'

  when: init_system == 'supervisord'


  when: init_system == 'supervisord'
# end block

- name: Send SIGKILL signals for all picodata processes on servers
  ansible.builtin.shell:
    cmd: 'sleep 10 && /usr/bin/pkill -9 picodata'
  when: sigkill | default("false") == "true"
  ignore_errors: True

- block:
  - name: Remove dirs if set purge variable when rootless is unset
    ansible.builtin.file:
      name: '{{ item }}'
      state: absent
    loop:
      - '{{ conf_dir }}/{{ cluster_name }}'
      - '{{ data_dir }}/{{ cluster_name }}'
      - '{{ run_dir }}/{{ cluster_name }}'
      - '{{ log_dir }}/{{ cluster_name }}'
      - '{{ share_dir }}/{{ cluster_name }}'
    when: rootless == false

  - name: Remove data from dirs if set purge variable and rootless
    ansible.builtin.shell:
      cmd: 'rm -rf {{ item }}/*'
    loop:
      - '{{ conf_dir }}/{{ cluster_name }}'
      - '{{ data_dir }}/{{ cluster_name }}'
      - '{{ run_dir }}/{{ cluster_name }}'
      - '{{ log_dir }}/{{ cluster_name }}'
      - '{{ share_dir }}/{{ cluster_name }}'
    when: rootless == true

  when: purge
# end block

- name: Remove tasks for become
  ansible.builtin.include_tasks:
    file: remove_become.yml
  when: rootless == false