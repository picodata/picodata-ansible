---

- name: Debug {{ replicaset.key }}
  ansible.builtin.debug:
    msg: '{{ cluster_id }}@{{ replicaset.key }}-{{ (groups["all"].index(inventory_hostname) +1)*1000 + item }}'
  loop: "{{ range(1, replicaset.value.instances_per_server + 1) | list }}"

- name: Set init-replication-factor
  ansible.builtin.set_fact:
    init_replication_factor: '{{ replicaset.value.replication_factor | default(1) }}'
  run_once: true

- name: Create env for instances
  ansible.builtin.blockinfile:
    path: '{{ systemd_dir }}/{{ cluster_id }}@{{ replicaset.key }}-{{ (groups["all"].index(inventory_hostname) +1)*1000 + item }}.service.d/env.conf'
    create: true
    block: |
      [Service]
      Environment=PICODATA_LISTEN={{ ansible_default_ipv4.address }}:{{ first_port + (ansible_loop.index-1)*100 + item - 1 }}
      Environment=PICODATA_INSTANCE_TIER={{ replicaset.key }}
  loop: "{{ range(1, replicaset.value.instances_per_server + 1) | list }}"

- name: Enable systemd services
  ansible.builtin.systemd_service:
    name: '{{ cluster_id }}@{{ replicaset.key }}-{{ (groups["all"].index(inventory_hostname) +1)*1000 + item }}'
    enabled: true
    state: started
    daemon_reload: true
    force: true
  loop: "{{ range(1, replicaset.value.instances_per_server + 1) | list }}"
