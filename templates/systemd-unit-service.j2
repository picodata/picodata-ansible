[Unit]
{% if autonames == true %}
Description=Picodata cluster {{ cluster_name }}-{{ instance_name }}
{% else %}
Description=Picodata cluster {{ cluster_name }}@%i
{% endif %}
After=network.target
StartLimitIntervalSec=600
StartLimitBurst=10

[Service]
Type=simple
Restart=on-failure
RestartSec=2

{% if rootless == false %}
User={{ user }}
Group={{ group }}
{% endif %}

Environment=RUST_BACKTRACE=full
{% if extra_vars is defined %}
{% for param, val in extra_vars.items() %}
Environment={{ param }}={{ val }}
{% endfor %}
{% endif %}

{% if autonames == true and tier.value.extra_vars is defined %}
{% for param, val in tier.value.extra_vars.items() %}
Environment={{ param }}={{ val | replace ("<INSTANCE_NUM>", "%02d"|format(instance_index|int) ) | replace ("<INSTANCE_NUM3>", "%03d"|format(instance_index|int) ) }}
{% endfor %}
{% endif %}

{% if autonames == true %}
ExecStartPre=/bin/sh -c 'mkdir -p {{ data_dir }}/{{ cluster_name }}/{{ instance_name }}'
ExecStart={{ bin_dir }}/picodata run --config {{ conf_dir }}/{{ cluster_name }}/{{ instance_name }}.conf
{% else %}
ExecStartPre=/bin/sh -c 'mkdir -p {{ data_dir }}/{{ cluster_name }}/%i'
ExecStart={{ bin_dir }}/picodata run --config {{ conf_dir }}/{{ cluster_name }}/%i.conf
{% endif %}
ExecStartPre=/bin/sh -c 'mkdir -p {{ share_dir }}/{{ cluster_name }}'

# Disable OOM killer
OOMScoreAdjust=-1000

{% for param, val in systemd_params|dictsort %}
{{ param }}={{ val }}
{% endfor %}

[Install]
WantedBy={% if rootless == false %}multi-user.target{% else %}default.target{% endif %}

