instance_units:
{% for host in ansible_play_hosts | sort %}{{ hostvars[host].instances_on_host | to_nice_yaml(sort_keys=false) }}{% endfor %}

{% if autonames  == true %}
instance_names:
{% for host in ansible_play_hosts | sort %}{{ hostvars[host].list_instance_names | map(attribute='0') | list | to_nice_yaml(sort_keys=false) }}{% endfor %}
{% endif %}

prometheus:
  scrape_configs:
    - job_name: {{ cluster_name }}
      static_configs:
{% for host in ansible_play_hosts | sort %}
{% for http in hostvars[host].list_http %}
        - targets: [{{ http }}]
          labels:
            host: {{ hostvars[host].listen_address }}
{% if autonames  == true %}
            instance: {{ hostvars[host].list_instance_names[loop.index0] }}
            unit: {{ hostvars[host].instances_on_host[loop.index0] }}
            replicaset: {{ hostvars[host].list_instance_names[loop.index0] | regex_search('(^.*_[0-9]+)_[0-9]+', '\\1') | list | last }}
            tier: {{ hostvars[host].list_instance_names[loop.index0] | regex_search('(^.*)_[0-9]+_[0-9]+', '\\1') | list | last }}
{% else %}
            instance: {{ hostvars[host].instances_on_host[loop.index0] }}
            unit: {{ hostvars[host].instances_on_host[loop.index0] }}
{% endif %}
{% endfor %}
{% endfor %}

http:
{% for host in ansible_play_hosts | sort %}{{ hostvars[host].list_http | to_nice_yaml(sort_keys=false) }}{% endfor %}

pg:
{% for host in ansible_play_hosts | sort %}{{ hostvars[host].list_pg | to_nice_yaml(sort_keys=false) }}{% endfor %}

bin:
{% for host in ansible_play_hosts | sort %}{{ hostvars[host].list_bin | to_nice_yaml(sort_keys=false) }}{% endfor %}

properties:
  autonames: {{ autonames }}
  role_ver: {{ role_ver }}
