---
# tasks file for picodata-ansible

- block:
  - name: Set scope for systemd
    ansible.builtin.set_fact:
      systemd_scope: 'user'
      systemd_user: '{{ user | default("root") }}'
      systemd_dir: '~/.config/systemd/user/'
    run_once: true
    when: rootless == true and init_system == 'systemd'

  - name: Register uid of {{ systemd_user }}
    command: 'id -u {{ systemd_user }}'
    register: uid

  - name: Debug uid
    ansible.builtin.debug:
      var: uid
    run_once: true
    when: debug == true

  tags: [ always ]

- name: Deploy Picodata cluster
  ansible.builtin.import_tasks:
    file: deploy.yml
  tags: [ deploy, restore_full ]

- name: Install Picodata packages
  ansible.builtin.import_tasks:
    file: install_packages.yml
  tags: [ never, install_pkgs ]

- name: Remove Picodata cluster
  ansible.builtin.import_tasks:
    file: remove.yml
  tags: [ never, remove ]

- name: Restart Picodata cluster
  ansible.builtin.import_tasks:
    file: restart.yml
  tags: [ never, restart ]

- name: Backup Picodata cluster
  ansible.builtin.import_tasks:
    file: backup.yml
  tags: [ never, backup ]

- name: Restore Picodata cluster
  ansible.builtin.import_tasks:
    file: restore.yml
  tags: [ never, restore, restore_full ]

- name: Generate inventory
  ansible.builtin.import_tasks:
    file: genin.yml
  tags: [ never, genin ]

- name: Install plugins
  ansible.builtin.import_tasks:
    file: plugins.yml
  tags: [ never, plugins, plugin ]

- name: Deploy Picodata cluster (for become with rootless)
  ansible.builtin.import_tasks:
    file: deploy_become.yml
  tags: [ never, deploy_become ]

- name: Remove root files after remove (for become with rootless)
  ansible.builtin.import_tasks:
    file: remove_become.yml
  tags: [ never, remove_become ]

- name: Get picodata crashed dumpfiles
  ansible.builtin.import_tasks:
    file: crash_dump.yml
  tags: [ never, crash_dump ]