- name: Copy utility files on remote hosts
  ansible.builtin.copy:
    src: '{{ item }}'
    dest: '{{ ansible_user_dir }}'
    mode: '0755'
  loop:
    - backup.sh

- name: Get list of socks files
  ansible.builtin.find:
    paths: '{{ run_dir }}'
    depth: 1
    patterns: '*.sock'
    file_type: any
  register: sock_files

- name: Set file name and current time
  ansible.builtin.set_fact:
    instances: '{{ sock_files.files | map(attribute="path") | list }}'
    DT: '{{ "%Y%m%d%H%M%S" | strftime }}'

- name: Backup instances
  ansible.builtin.command:
    cmd: '{{ ansible_user_dir }}/backup.sh -s {{ instance }} -d {{ backup_dir }}/{{ DT }}'
  loop: '{{ instances }}'
  loop_control:
    loop_var: instance

- name: Pack backups for fetch
  ansible.builtin.shell:
    chdir: '{{ backup_dir }}/{{ DT }}'
    cmd: 'tar -cf {{ backup_dir }}/{{ inventory_hostname }}.tar *'
  when: backup_fetch

- name: Fetch backups from remote hosts
  ansible.builtin.fetch:
    src: '{{ backup_dir }}/{{ inventory_hostname }}.tar'
    dest: '{{ backup_fetch_dir }}/{{ DT }}/{{ inventory_hostname }}.tar'
    flat: true
  when: backup_fetch

- name: Remove archive on remote hosts
  ansible.builtin.file:
    path: '{{ backup_dir }}/{{ inventory_hostname }}.tar'
    state: absent
  when: backup_fetch

- name: Remove utility files on remote hosts
  ansible.builtin.file:
    path: '{{ ansible_user_dir }}/{{ item }}'
    state: absent
  loop:
    - backup.sh
