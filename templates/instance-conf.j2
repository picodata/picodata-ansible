cluster:
  name: '{{ cluster_name }}'
  default_bucket_count: {{ default_bucket_count | default(30000) }}
  shredding: {{ shredding }}

  tier:
{% for name, params in tiers.items() %}
    {{ name }}:
      replication_factor: {{ params.replication_factor | default(1) }}
      can_vote: {{ params.can_vote | default(true) }}
{% if params.bucket_count is defined %}
      bucket_count: {{ params.bucket_count }}
{% endif %}
{% endfor %}

instance:
  instance_dir: '{{ data_dir }}/{{ cluster_name }}/{{ instance_name }}'

{% if autonames == false %}
  name: '{{ instance_name }}'
{% else %}
{% if list_instance_names is defined and first_deploy == false and tag != 'expand' %}
  name: '{{ list_instance_names[instance_index | int] }}'
{% else %}
#  name: '{{ instance_name }}'
{% endif %}
{% endif %}

  tier: '{{ tier.key }}'
  peer: [ {% for host in all_hosts | difference([inventory_hostname ]) | sort %}{{ hostvars[host]['listen_address'] | default(ansible_fqdn) }}:{{ first_bin_port }},{% endfor %}{{ listen_address }}:{{ first_bin_port }} ]
  failure_domain: { {% if fd_uniq_per_instance %}'I': '{{ instance_name }}'{% else %}{{ fd }}{% endif %} }

  iproto_listen: "0.0.0.0:{{ list_bin[instance_index | int] | regex_search('.*:([0-9]+)', '\\1') | list | last }}"
  iproto_advertise: '{{ list_bin[instance_index | int] }}'
  http_listen: '0.0.0.0:{{ list_http[instance_index | int] | regex_search('.*:([0-9]+)', '\\1') | list | last }}'
  admin_socket: '{{ run_dir }}/{{ cluster_name }}/{{ instance_name }}.sock'

  pg:
    listen: '0.0.0.0:{{ list_pg[instance_index | int] | regex_search('.*:([0-9]+)', '\\1') | list | last }}'
    advertise: '{{ list_pg[instance_index | int] }}'
    ssl: {{ pg_ssl }}
{% if pg_ssl == true and picodata_version is version('25.4.3', '>=') %}
    cert_file: {{ cert_dir }}/{{ cluster_name }}/pg/{{ iproto_cert_file | basename }}
    key_file: {{ cert_dir }}/{{ cluster_name }}/pg/{{ iproto_key_file | basename }}
    ca_file: {{ cert_dir }}/{{ cluster_name }}/pg/{{ iproto_ca_file | basename }}
{% endif %}

{% if iproto_tls == true %}
  iproto_tls:
    enabled: true
    cert_file: {{ cert_dir }}/{{ cluster_name }}/iproto/{{ iproto_cert_file | basename }}
    key_file: {{ cert_dir }}/{{ cluster_name }}/iproto/{{ iproto_key_file | basename }}
    ca_file: {{ cert_dir }}/{{ cluster_name }}/iproto/{{ iproto_ca_file | basename }}
{% endif %}

  share_dir: '{{ share_dir }}/{{ cluster_name }}'
{% if audit %}
{% if audit_to == "file" %}
  audit: '{{ log_dir }}/{{ cluster_name }}/audit-{{ instance_name }}.log'
{% elif audit_to == "pipe" and audit_pipe_command is defined %}
  audit: 'pipe:{{ audit_pipe_command }}'
{% else %}
  audit: '{{ audit_to }}:'
{% endif %}
{% endif %}

  log:
    level: {{ log_level }}
{% if log_to == "file" %}
    destination: '{{ log_dir }}/{{ cluster_name }}/{{ instance_name }}.log'
{% elif log_to == "pipe" and log_pipe_command is defined %}
    destination: 'pipe:{{ log_pipe_command }}'
{% endif %}
    format: '{{ log_format }}'
{% if tier.value.config is defined %}
  {{ tier.value.config | to_nice_yaml(indent=2) | indent(width=2) }}
{% endif %}

  backup_dir: '{{ backup_dir }}/{{ cluster_name }}/{{ instance_name }}'
