[Unit]
Description=Picodata cluster {{ cluster_name }}@%i
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/picodata run
Restart=on-failure
RestartSec=2
User={{ user }}
Group={{ group }}

Environment=PICODATA_ADMIN_SOCK={{ run_dir }}/{{ cluster_name }}/%i.sock
Environment=PICODATA_INSTANCE_DIR={{ data_dir }}/{{ cluster_name }}/%i
Environment=PICODATA_INSTANCE_NAME=%i
Environment=PICODATA_PEER={% for host in groups["all"] | difference([inventory_hostname]) %}{{ hostvars[host]['listen_address'] | default(ansible_fqdn) }}:{{ first_bin_port }},{% endfor %}{{ listen_address }}:{{ first_bin_port }}

Environment=PICODATA_LOG_LEVEL={{ log_level }}
Environment=PICODATA_PLUGIN_DIR={{ data_dir }}/{{ cluster_name }}/plugins
Environment=RUST_BACKTRACE=full
{% if log_to == "file" %}
Environment=PICODATA_LOG={{ log_dir }}/{{ cluster_name }}/%i.log
{% elif log_to == "pipe" and log_pipe_command is defined %}
Environment=PICODATA_LOG="pipe:{{ log_pipe_command }}"
{% endif %}

Environment=PICODATA_FAILURE_DOMAIN={% if fd_uniq_per_instance %}I=%i{% else %}{{ fd }}{% endif %}

{% if service_password is defined %}
Environment=PICODATA_SERVICE_PASSWORD_FILE={{ conf_dir }}/{{ cluster_name }}/.service-password
{% endif %}

{% if audit %}
{% if audit_to == "file" %}
Environment=PICODATA_AUDIT_LOG={{ log_dir }}/{{ cluster_name }}/audit-%i.log
{% elif audit_to == "pipe" and audit_pipe_command is defined %}
Environment=PICODATA_AUDIT_LOG="pipe:{{ audit_pipe_command }}"
{% endif %}
{% endif %}

{% if extra_vars is defined %}
{% for param, val in extra_vars.items() %}
Environment={{ param }}={{ val }}
{% endfor %}
{% endif %}

ExecStartPre=/bin/sh -c 'mkdir -p {{ data_dir }}/{{ cluster_name }}/%i'
ExecStartPre=/bin/sh -c 'mkdir -p {{ data_dir }}/{{ cluster_name }}/plugins'

# Disable OOM killer
OOMScoreAdjust=-1000

{% for param, val in systemd_params|dictsort %}
{{ param }}={{ val }}
{% endfor %}

[Install]
WantedBy=multi-user.target
Alias={{ cluster_name }}.%i

