---
# subtasks for deploy cluster

- block:
  - name: Create dirs for instances in tier {{ tier.key }}
    ansible.builtin.file:
      path: '{{ systemd_dir }}/{{ cluster_name }}@{{ tier.key }}-{{ (groups["all"].index(inventory_hostname) +1)*1000 + instance_num|int }}.service.d'
      state: directory

  - name: Create systemd-env file for instances in tier {{ tier.key }}
    ansible.builtin.template:
      src: systemd-unit-env.j2
      dest: '{{ systemd_dir }}/{{ cluster_name }}@{{ tier.key }}-{{ (groups["all"].index(inventory_hostname) +1)*1000 + instance_num|int }}.service.d/env.conf'
      force: true

  - name: Enable systemd services for tier {{ tier.key }}
    ansible.builtin.systemd:
      name: '{{ cluster_name }}@{{ tier.key }}-{{ (groups["all"].index(inventory_hostname) +1)*1000 + instance_num|int }}'
      enabled: true
      state: started
      daemon_reload: true
      force: true

  become: true
  when: init_system == 'systemd'
# end block

- name: Create supervisord conf-files for instances in tier {{ tier.key }}
  ansible.builtin.template:
    src: supervisord-apps.j2
    dest: '{{ supervisord_dir }}/{{ cluster_name }}/{{ tier.key }}-{{ (groups["all"].index(inventory_hostname) +1)*1000 + instance_num|int }}.conf'
    force: true
  when: init_system == 'supervisord'

- name: Calculate next port number on server
  ansible.builtin.set_fact:
    instance_num: '{{ instance_num|int + 1}}'